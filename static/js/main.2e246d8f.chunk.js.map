{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","emptyState","setState","changeGood","good","checked","this","className","type","onClick","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,WAAa,WACX,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,WAAa,SAACH,EAAsBI,GAC9BJ,IAAiBI,EACnB,EAAKH,aAEL,EAAKC,SAAS,CAAEF,aAAcI,KAbpC,EAiBEC,QAAU,SAACL,EAAsBI,GAC/B,OAAOJ,IAAiBI,GAlB5B,4CAqBE,WAAU,IAAD,OACCJ,EAAiBM,KAAKP,MAAtBC,aAER,OACE,uBAAMO,UAAU,oBAAhB,UAEIP,EAEI,qBAAIO,UAAU,sCAAd,oBACMP,EADN,gBAGE,wBACE,aAAW,IACX,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKL,gBAKlB,oBAAIM,UAAU,QAAd,+BAKN,uBAAOA,UAAU,QAAjB,SACE,gCACGV,EAAMa,KAAI,SAAAN,GACT,OACE,qBACE,UAAQ,OACRG,UAAWI,IAAW,CACpB,+BACE,EAAKN,QAAQL,EAAcI,KAJjC,UAOE,6BACE,wBACE,UACE,EAAKC,QAAQL,EAAcI,GACvB,eACA,YAENI,KAAK,SACLD,UAAWI,IACT,SACA,CAAE,UAAW,EAAKN,QAAQL,EAAcI,KAE1CK,QAAS,WACP,EAAKN,WAAWH,EAAcI,IAZlC,SAgBI,EAAKC,QAAQL,EAAcI,GAAQ,IAAM,QAI/C,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGH,qBAhFrB,GAAyBQ,aCpBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2e246d8f.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  emptyState = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  changeGood = (selectedGood: string, good: string) => {\n    if (selectedGood === good) {\n      this.emptyState();\n    } else {\n      this.setState({ selectedGood: good });\n    }\n  };\n\n  checked = (selectedGood: string, good: string) => {\n    return selectedGood === good;\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {\n          selectedGood\n            ? (\n              <h1 className=\"title is-flex is-align-items-center\">\n                {`${selectedGood} is selected`}\n\n                <button\n                  aria-label=\" \"\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={this.emptyState}\n                />\n              </h1>\n            )\n            : (\n              <h1 className=\"title\">\n                No goods selected\n              </h1>\n            )\n        }\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  className={classNames({\n                    'has-background-success-light':\n                      this.checked(selectedGood, good),\n                  })}\n                >\n                  <td>\n                    <button\n                      data-cy={\n                        this.checked(selectedGood, good)\n                          ? 'RemoveButton'\n                          : 'AddButton'\n                      }\n                      type=\"button\"\n                      className={classNames(\n                        'button',\n                        { 'is-info': this.checked(selectedGood, good) },\n                      )}\n                      onClick={() => {\n                        this.changeGood(selectedGood, good);\n                      }}\n                    >\n                      {\n                        this.checked(selectedGood, good) ? '-' : '+'\n                      }\n                    </button>\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}